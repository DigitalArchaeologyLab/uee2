# version: "2"

services:
  mysql:
    image: mysql:5.7
    volumes:
      - ./mysql_dump:/docker-entrypoint-initdb.d
      - ./backend/data_volume:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: uee
  nginx:
    # restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile.nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - /static_volume:/app/backend/django_static
      - ./docker/nginx/production:/etc/nginx/conf.d
      - ./docker/nginx/certbot/conf:/etc/letsencrypt
      - ./docker/nginx/certbot/www:/var/www/certbot
    depends_on:
      - backend
  certbot:
    image: certbot/certbot
    # restart: unless-stopped
    volumes:
      - ./docker/nginx/certbot/conf:/etc/letsencrypt
      - ./docker/nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  backend:
    # restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    # entrypoint: /app/docker/backend/wsgi-entrypoint.sh
    volumes:
      - /static_volume:/app/backend/django_static
    expose:
      - 8000
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}

volumes:
  static_volume: {}
